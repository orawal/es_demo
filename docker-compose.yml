version: '2.2'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.2
    container_name: elasticsearch
    environment:
      - node.name=es01
#      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=elasticsearch
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elk

  kibana:
    image: kibana:7.4.2
    ports:
      - "5601:5601"
#    volumes:
#    - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
    networks:
      - elk

  logstash:
    image: logstash:7.4.2
    links:
      - elasticsearch
    volumes:
      - ./logstash:/logstash
#      - ./logstash/mysql-connector-java-5.1.48/mysql-connector-java-5.1.48.jar:/usr/share/logstash/logstash-core/lib/jars/mysql-connector-java-5.1.48.jar
    command: logstash -f /logstash/conf.d/logstash.conf
#    command: logstash -f /logstash/conf.d/mysql.conf
#    command: logstash -f /logstash/conf.d/kafka.conf
    depends_on:
      - elasticsearch
    networks:
      - elk

#  mysql:
#    image: mysql:8.0.1
#    environment:
#      MYSQL_DATABASE: 'movielens'
#      MYSQL_USER: es-demo
#      MYSQL_PASSWORD: es-demo
#      MYSQL_ROOT_PASSWORD: es-demo
#    restart: always
#    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci', '--skip-character-set-client-handshake']
#    volumes:
#      - ./data:/data
#      - ./esdata01:/var/lib/mysql
#    depends_on:
#      - elasticsearch
#    networks:
#      - elk
#  zookeeper:
#    image: wurstmeister/zookeeper
#    ports:
#      - "2181:2181"
#    networks:
#      - elk
#  kafka:
#    image: wurstmeister/kafka
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_CREATE_TOPICS: "kafka-logs:1:1"
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      HOSTNAME_COMMAND: "echo $$(hostname)"
#      BROKER_ID_COMMAND: "docker inspect --format '{{ .Name }}' $$(hostname) | awk -F_ '{ printf $$NF }'"
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - ./logstash/data:/data
#    networks:
#      - elk

volumes:
  esdata01:
    driver: local

networks:
    elk:
      driver: bridge